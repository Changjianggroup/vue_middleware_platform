{"remainingRequest":"/data/software/vue_middleware_platform/node_modules/thread-loader/dist/cjs.js!/data/software/vue_middleware_platform/node_modules/babel-loader/lib/index.js!/data/software/vue_middleware_platform/src/utils/request.js","dependencies":[{"path":"/data/software/vue_middleware_platform/src/utils/request.js","mtime":1609076227284},{"path":"/data/software/vue_middleware_platform/node_modules/cache-loader/dist/cjs.js","mtime":1609060265603},{"path":"/data/software/vue_middleware_platform/node_modules/thread-loader/dist/cjs.js","mtime":1609060265532},{"path":"/data/software/vue_middleware_platform/node_modules/babel-loader/lib/index.js","mtime":1609060265632}],"contextDependencies":[],"result":["import axios from 'axios';\nimport store from \"../store\";\nimport { getToken } from '@/utils/auth';\nvar service = axios.create({\n  // process.env.NODE_ENV === 'development' 来判断是否开发环境\n  // easy-mock服务挂了，暂时不使用了\n  // baseURL: 'https://www.easy-mock.com/mock/592501a391470c0ac1fab128',\n  baseURL: 'https://middleware.bssrv.com:8000',\n  timeout: 50000\n}); // service.interceptors.request.use(\n//     config => {\n//         return config;\n//     },\n//     error => {\n//         console.log(error);\n//         return Promise.reject();\n//     }\n// );\n//\n// service.interceptors.response.use(\n//     response => {\n//         if (response.status === 200) {\n//             return response.data;\n//         } else {\n//             Promise.reject();\n//         }\n//     },\n//     error => {\n//         console.log(error);\n//         return Promise.reject();\n//     }\n// );\n//\n// export default service;\n\nservice.interceptors.request.use(function (config) {\n  if (store.getters.token) {\n    config.headers['Authorization'] = 'Token ' + getToken(); // 让每个请求携带自定义token 请根据实际情况自行修改\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.log(error); // for debug\n\n  Promise.reject(error);\n}); // response 拦截器\n\nservice.interceptors.response.use(function (response) {\n  /**\n   * code为非20000是抛错 可结合自己业务进行修改\n   */\n  return response.data;\n}, function (error) {\n  console.log('err' + error); // for debug\n  // Message({\n  //   message: error.message,\n  //   type: 'error',\n  //   duration: 5 * 1000\n  // })\n\n  return Promise.reject(error);\n});\nexport default service;",null]}