{"remainingRequest":"/data/software/vue_middleware_platform/node_modules/thread-loader/dist/cjs.js!/data/software/vue_middleware_platform/node_modules/babel-loader/lib/index.js!/data/software/vue_middleware_platform/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/software/vue_middleware_platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/software/vue_middleware_platform/src/components/page/redisOperation/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/software/vue_middleware_platform/src/components/page/redisOperation/index.vue","mtime":1610094376765},{"path":"/data/software/vue_middleware_platform/node_modules/cache-loader/dist/cjs.js","mtime":1609060265603},{"path":"/data/software/vue_middleware_platform/node_modules/thread-loader/dist/cjs.js","mtime":1609060265532},{"path":"/data/software/vue_middleware_platform/node_modules/babel-loader/lib/index.js","mtime":1609060265632},{"path":"/data/software/vue_middleware_platform/node_modules/cache-loader/dist/cjs.js","mtime":1609060265603},{"path":"/data/software/vue_middleware_platform/node_modules/vue-loader/lib/index.js","mtime":1609060265552}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.flags\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getServerList, showALLKey, showDBSize, getKey, getKeyTTL, delKey, createKey, clusterNode, clusterInfo } from '@/api/redis_server'; // import { getSupplierList } from '@/api/supplier'\n// import { getManufactoryList } from '@/api/manufactory'\n// import { getIdcList } from '@/api/idc'\n\nexport default {\n  name: 'redisOperation',\n  data: function data() {\n    return {\n      cluster_options: [],\n      value_id: '',\n      value_cluster_name: '',\n      value_hosts: '',\n      cluster_list: [],\n      loading: false,\n      result_code: '',\n      result_msg: '',\n      totalNum: 0,\n      server: [],\n      input_key_for_value: '',\n      input_key_for_ttl: '',\n      input_key_for_del: '',\n      input_key_for_create: '',\n      input_value_for_create: '',\n      selected_server_id: null,\n      params: {\n        page: 1,\n        keywords: '',\n        page_size: 10000\n      },\n      kwargs: {}\n    };\n  },\n  created: function created() {\n    this.fetchData();\n    this.value_id = this.$store.state.redis.server_id;\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      getServerList(this.params).then( // 获取redis集群列表\n      function (res) {\n        _this.server = res.results;\n        _this.totalNum = res.count; //\n\n        _this.cluster_list = _this.server.map(function (item) {\n          return {\n            id: \"\".concat(item.id),\n            hosts: \"\".concat(item.hosts),\n            cluster_name: \"\".concat(item.cluster_name)\n          };\n        });\n\n        if (_this.$store.state.redis.server_id !== 0) {\n          // this.value = this.$store.state.redis.server_id\n          _this.value_cluster_name = _this.cluster_list.find(function (item) {\n            if (parseInt(item.id) === _this.$store.state.redis.server_id) {\n              return item;\n            }\n          }).cluster_name;\n          _this.value_hosts = _this.cluster_list.find(function (item) {\n            if (parseInt(item.id) === _this.$store.state.redis.server_id) {\n              return item;\n            }\n          }).hosts;\n        }\n      }, function (err) {\n        _this.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    remoteSearchRedisClusterName: function remoteSearchRedisClusterName(query) {\n      var _this2 = this;\n\n      this.cluster_list = this.server.map(function (item) {\n        return {\n          id: \"\".concat(item.id),\n          hosts: \"\".concat(item.hosts),\n          cluster_name: \"\".concat(item.cluster_name)\n        };\n      });\n\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(function () {\n          _this2.loading = false;\n          _this2.cluster_options = _this2.cluster_list.filter(function (item) {\n            return item.cluster_name.toLowerCase().indexOf(query.toLowerCase()) > -1;\n          });\n        }, 200);\n      } else {\n        this.cluster_options = [];\n      }\n    },\n    remoteSearchRedisClusterHosts: function remoteSearchRedisClusterHosts(query) {\n      var _this3 = this;\n\n      this.cluster_list = this.server.map(function (item) {\n        return {\n          id: \"\".concat(item.id),\n          hosts: \"\".concat(item.hosts),\n          cluster_name: \"\".concat(item.cluster_name)\n        };\n      });\n\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(function () {\n          _this3.loading = false;\n          _this3.cluster_options = _this3.cluster_list.filter(function (item) {\n            return item.hosts.toLowerCase().indexOf(query.toLowerCase()) > -1;\n          });\n        }, 200);\n      } else {\n        this.cluster_options = [];\n      }\n    },\n    setSelectedClusterName: function setSelectedClusterName() {\n      var _this4 = this;\n\n      this.value_cluster_name = this.cluster_options.find(function (item) {\n        if (item.hosts === _this4.value_hosts) {\n          return item;\n        }\n      }).cluster_name;\n    },\n    setSelectedHosts: function setSelectedHosts() {\n      var _this5 = this;\n\n      // this.cluster_options = this.server.map(i => {\n      //   return { value: `${i.id}`, label: `${i.cluster_name}` }\n      // })\n      this.value_hosts = this.cluster_options.find(function (item) {\n        if (item.cluster_name === _this5.value_cluster_name) {\n          return item;\n        }\n      }).hosts;\n    },\n    handlershowALLKey: function handlershowALLKey() {\n      var _this6 = this;\n\n      this.value_id = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this6.value_cluster_name) {\n          return item;\n        }\n      }).id;\n      showALLKey(this.value_id).then( // 获取redis集群列表\n      function (res) {\n        var str_key = '\\n';\n\n        for (var i in res.msg) {\n          str_key = str_key + res.msg[i] + '\\n';\n        }\n\n        _this6.result_code = '返回code：' + res.code;\n        _this6.result_msg = '返回结果：' + str_key;\n      }, function (err) {\n        _this6.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    handlershowDBSize: function handlershowDBSize() {\n      var _this7 = this;\n\n      var obj_item = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this7.value_cluster_name) {\n          return item;\n        }\n      });\n      this.value_id = obj_item.id;\n      showDBSize(this.value_id).then( // 获取redis集群列表\n      function (res) {\n        var msg = \"\\n\";\n\n        if (res.msg instanceof Object) {\n          for (var key in res.msg) {\n            msg = msg + key + \":\" + '\\n';\n            msg = msg + res.msg[key] + '\\n';\n          } // msg = JSON.stringify(res.msg).toString()\n\n        } else {\n          msg = res.msg;\n        }\n\n        _this7.result_code = '返回code：' + res.code;\n        _this7.result_msg = '返回结果：' + msg;\n      }, function (err) {\n        _this7.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    handleGetKey: function handleGetKey() {\n      var _this8 = this;\n\n      this.value_id = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this8.value_cluster_name) {\n          return item;\n        }\n      }).id;\n      this.kwargs.id = this.value_id;\n      this.kwargs.key = this.input_key_for_value;\n      getKey(this.kwargs).then( // 获取redis集群列表\n      function (res) {\n        _this8.result_code = '返回code：' + res.code;\n        _this8.result_msg = '返回结果：\\n' + res.msg;\n      }, function (err) {\n        _this8.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    handleGetKeyTTL: function handleGetKeyTTL() {\n      var _this9 = this;\n\n      this.value_id = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this9.value_cluster_name) {\n          return item;\n        }\n      }).id;\n      this.kwargs.id = this.value_id;\n      this.kwargs.key = this.input_key_for_ttl;\n      getKeyTTL(this.kwargs).then( // 获取redis集群列表\n      function (res) {\n        _this9.result_code = '返回code：' + res.code;\n        _this9.result_msg = '返回结果：' + res.msg;\n      }, function (err) {\n        _this9.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    handleDelKey: function handleDelKey() {\n      var _this10 = this;\n\n      this.value_id = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this10.value_cluster_name) {\n          return item;\n        }\n      }).id;\n      this.kwargs.id = this.value_id;\n      this.kwargs.key = this.input_key_for_del;\n      delKey(this.kwargs).then( // 获取redis集群列表\n      function (res) {\n        _this10.result_code = '返回code：' + res.code;\n\n        if (parseInt(res.msg) === 1) {\n          _this10.result_msg = '返回结果：成功删除';\n        }\n\n        if (parseInt(res.msg) === 0) {\n          _this10.result_msg = '返回结果：不存在该键';\n        }\n\n        if (parseInt(res.msg) > 1) {\n          _this10.result_msg = '返回结果：成功删除' + res.msg + '个键';\n        }\n      }, function (err) {\n        _this10.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    handleCreateKey: function handleCreateKey() {\n      var _this11 = this;\n\n      this.value_id = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this11.value_cluster_name) {\n          return item;\n        }\n      }).id;\n      this.kwargs.id = this.value_id;\n      this.kwargs.key = this.input_key_for_create;\n      this.kwargs.value = this.input_value_for_create;\n      createKey(this.kwargs).then( // 获取redis集群列表\n      function (res) {\n        _this11.result_code = '返回结果：' + res;\n        _this11.result_msg = '';\n      }, function (err) {\n        _this11.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    handlershowClusterInfo: function handlershowClusterInfo() {\n      var _this12 = this;\n\n      this.value_id = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this12.value_cluster_name) {\n          return item;\n        }\n      }).id;\n      clusterInfo(this.value_id).then( // 获取cluster info\n      function (res) {\n        var msg = \"\";\n\n        if (res.msg instanceof Object) {\n          for (var key in res.msg) {\n            msg = msg + '\\n';\n            msg = msg + \"集群节点\" + key + \":\" + '\\n';\n\n            if (res.msg[key] instanceof Object) {\n              for (var value_key in res.msg[key]) {\n                msg = msg + value_key + \":\" + '\\n';\n                msg = msg + res.msg[key][value_key] + '\\n';\n              }\n            } else {\n              msg = msg + res.msg[key] + '\\n';\n            }\n          } // msg = JSON.stringify(res.msg).toString()\n\n        } else {\n          msg = res.msg;\n        }\n\n        _this12.result_code = '返回code：' + res.code;\n        _this12.result_msg = '返回结果：' + msg;\n      }, function (err) {\n        _this12.$message({\n          type: 'error',\n          message: err\n        });\n      });\n    },\n    handlershowClusterNode: function handlershowClusterNode() {\n      var _this13 = this;\n\n      this.value_id = this.cluster_list.find(function (item) {\n        if (item.cluster_name === _this13.value_cluster_name) {\n          return item;\n        }\n      }).id;\n      clusterNode(this.value_id).then( // 获取cluster info\n      function (res) {\n        var msg = \"\";\n\n        if (res.code === 200) {\n          for (var i in res.msg) {\n            msg = msg + '\\n';\n            msg = msg + \"集群节点\" + res.msg[i]['host'] + \":\" + res.msg[i]['port'] + \"\\n\";\n            msg = msg + 'id:' + res.msg[i]['id'] + '\\n';\n            msg = msg + 'cluster-bus-port:' + res.msg[i]['cluster-bus-port'] + '\\n';\n            msg = msg + 'flags:' + res.msg[i]['flags'] + '\\n';\n            msg = msg + 'master:' + res.msg[i]['master'] + '\\n';\n            msg = msg + 'ping-sent:' + res.msg[i]['ping-sent'] + '\\n';\n            msg = msg + 'pong-recv:' + res.msg[i]['pong-recv'] + '\\n';\n            msg = msg + 'link-state:' + res.msg[i]['link-state'] + '\\n';\n            msg = msg + 'migrations:' + res.msg[i]['migrations'] + '\\n';\n          }\n        } else {\n          msg = msg + res.msg;\n        }\n\n        _this13.result_code = '返回code：' + res.code;\n        _this13.result_msg = '返回结果：' + msg;\n      }, function (err) {\n        _this13.$message({\n          type: 'error',\n          message: err.response\n        });\n      });\n    }\n  }\n};",null]}