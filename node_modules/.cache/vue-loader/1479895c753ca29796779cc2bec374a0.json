{"remainingRequest":"/data/software/vue_middleware_platform/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/software/vue_middleware_platform/src/components/page/audit/dbcrud/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/software/vue_middleware_platform/src/components/page/audit/dbcrud/index.vue","mtime":1610812226842},{"path":"/data/software/vue_middleware_platform/node_modules/babel-loader/lib/index.js","mtime":1609060265632},{"path":"/data/software/vue_middleware_platform/node_modules/cache-loader/dist/cjs.js","mtime":1609060265603},{"path":"/data/software/vue_middleware_platform/node_modules/vue-loader/lib/index.js","mtime":1609060265552}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getDBCRUDList } from '@/api/audit'\nimport { getUserList } from '@/api/users'\nimport { formatJson } from '@/utils'\nexport default {\n    name: 'DBCRUDinfor',\n    data() {\n        return {\n            // 遮罩层\n            loading: true,\n            // 选中数组\n            ids: [],\n            // 非多个禁用\n            multiple: true,\n            // 查询用户\n            username: '',\n            // 总条数\n            total: 0,\n            // 表格数据\n            list: [],\n            // 用户数据\n            userList: [],\n            // 状态数据字典\n            statusOptions: [],\n            // 查询参数\n            queryParams: {\n                page: 1,\n                page_size: 10,\n                event_type: undefined,\n                user_id: undefined\n            },\n            event_type_options: [{\n                value: '1',\n                label: 'CREATE'\n            }, {\n                value: '2',\n                label: 'UPDATE'\n            }, {\n                value: '3',\n                label: 'DELETE'\n            }, {\n                value: '4',\n                label: 'Many-to-Many CHANGE'\n            }, {\n                value: '5',\n                label: 'Reverse Many-to-Many Change'\n            }],\n            event_type_value: '',\n            start_date: '',\n            end_date: '',\n            pickerOptions: {\n              disabledDate(time) {\n                return time.getTime() > Date.now();\n              },\n              shortcuts: [{\n                text: '今天',\n                onClick(picker) {\n                  picker.$emit('pick', new Date());\n                }\n              }, {\n                text: '昨天',\n                onClick(picker) {\n                  const date = new Date();\n                  date.setTime(date.getTime() - 3600 * 1000 * 24);\n                  picker.$emit('pick', date);\n                }\n              }, {\n                text: '一周前',\n                onClick(picker) {\n                  const date = new Date();\n                  date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n                  picker.$emit('pick', date);\n                }\n              }]\n            }, \n          }\n    },\n    created() {\n        this.getUser()\n        this.getList()\n        // this.getDicts('sys_common_status').then(response => {\n        //     this.statusOptions = response.data\n        // })\n    },\n    methods: {\n        /** 查询数据库变更记录 */\n        getList() {\n            this.loading = true\n            getDBCRUDList(this.queryParams).then(response => {\n                    this.list = response.results\n                    for (let i in this.list) {\n                        this.list[i]['num'] = parseInt(i) + 1\n                    }\n                    this.total = response.count\n                    this.loading = false\n                }\n            )\n\n        },\n        /** 获取用户列表 */\n        getUser() {\n            getUserList().then(response => {\n                    this.userList = response.results\n                }\n            )\n        },\n        /** 搜索按钮操作 */\n        handleQuery() {\n            this.queryParams.page = 1\n            this.queryParams.user_id = undefined\n            for (let i in this.userList) {\n                if (this.username === this.userList[i]['username']) {\n                    this.queryParams.user_id = this.userList[i]['id']\n                }\n            }\n            this.queryParams.event_type = this.event_type_value\n            this.getList()\n        },\n        /** 重置按钮操作 */\n        resetQuery() {\n            this.dateRange = []\n            this.event_type_value = ''\n            this.username = ''\n            this.queryParams.event_type = ''\n            this.queryParams.user_id = ''\n            this.handleQuery()\n        },\n        /** 转换数据库状态为中文 */\n        formateventType(row, column) {\n            if (row.event_type === 1) {\n                return \"CREATE\"\n            }\n            else if (row.event_type === 2) {\n                return \"UPDATE\"\n            }\n            else if (row.event_type === 3) {\n                return \"DELETE\"\n            }\n            else if (row.event_type === 4) {\n                return \"Many-to-Many CHANGE\"\n            }\n            else if (row.event_type === 5) {\n                return \"Reverse Many-to-Many Change\"\n            }\n        },\n        /** 转换用户id状态为用户名 */\n        formatuserID(row, column) {\n            let val = ''\n            for (let i in this.userList) {\n                if (row.user_id === this.userList[i]['id']) {\n                    val = this.userList[i]['username']\n                }\n            }\n            return val\n        },\n        /** 导出按钮操作 */\n        handleExport() {\n            // const queryParams = this.queryParams\n            this.$confirm('是否确认导出现在的数据库操作记录表单?', '警告', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.downloadLoading = true\n                import('@/utils/Export2Excel').then(excel => {\n                    const tHeader = ['编号',  '用户编号','用户名称', '登陆IP',  '登陆状态', '登陆日期']\n                    const filterVal = ['num', 'user_id', 'username', 'remote_ip', 'login_type', 'datetime']\n                    const list = this.list\n                    const data = formatJson(filterVal, list)\n                    excel.export_json_to_excel({\n                        header: tHeader,\n                        data,\n                        filename: 'DB操作日志',\n                        autoWidth: true, // Optional\n                        bookType: 'xlsx' // Optional\n                    })\n                    this.downloadLoading = false\n                })\n            })\n        }\n    }\n}\n",null]}